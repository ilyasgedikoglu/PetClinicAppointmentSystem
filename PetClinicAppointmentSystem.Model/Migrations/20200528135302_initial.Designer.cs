// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PetClinicAppointmentSystem.Model.Infrastructure;

namespace PetClinicAppointmentSystem.Model.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200528135302_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("PetClinicAppointmentSystem.Model.Entity.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Actived")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("AppointmentTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<int>("PetId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.HasIndex("UserId");

                    b.ToTable("Appointment");
                });

            modelBuilder.Entity("PetClinicAppointmentSystem.Model.Entity.AvailableAppointmentTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Actived")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("AppointmentTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<int>("Time")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("AvailableAppointmentTime");
                });

            modelBuilder.Entity("PetClinicAppointmentSystem.Model.Entity.Giris", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Actived")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("Durum")
                        .HasColumnType("boolean");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<string>("Token")
                        .HasColumnType("character varying(511)")
                        .HasMaxLength(511);

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Giris");
                });

            modelBuilder.Entity("PetClinicAppointmentSystem.Model.Entity.Pet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Actived")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DogumYeri")
                        .HasColumnType("character varying(63)")
                        .HasMaxLength(63);

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(63)")
                        .HasMaxLength(63);

                    b.Property<string>("Resim")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Pet");
                });

            modelBuilder.Entity("PetClinicAppointmentSystem.Model.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Actived")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("DogumTarihi")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DogumYeri")
                        .HasColumnType("character varying(63)")
                        .HasMaxLength(63);

                    b.Property<string>("Email")
                        .HasColumnType("character varying(127)")
                        .HasMaxLength(127);

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<string>("KimlikNo")
                        .HasColumnType("character varying(31)")
                        .HasMaxLength(31);

                    b.Property<string>("Name")
                        .HasColumnType("character varying(63)")
                        .HasMaxLength(63);

                    b.Property<string>("Password")
                        .HasColumnType("character varying(63)")
                        .HasMaxLength(63);

                    b.Property<string>("Resim")
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Surname")
                        .HasColumnType("character varying(63)")
                        .HasMaxLength(63);

                    b.Property<string>("TuzlamaDegeri")
                        .HasColumnType("character varying(63)")
                        .HasMaxLength(63);

                    b.Property<int?>("YetkiId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("YetkiId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("PetClinicAppointmentSystem.Model.Entity.Yetki", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Actived")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Description")
                        .HasColumnType("character varying(127)")
                        .HasMaxLength(127);

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("character varying(63)")
                        .HasMaxLength(63);

                    b.Property<bool>("Showed")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Yetki");
                });

            modelBuilder.Entity("PetClinicAppointmentSystem.Model.Entity.Appointment", b =>
                {
                    b.HasOne("PetClinicAppointmentSystem.Model.Entity.Pet", "Pet")
                        .WithMany()
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetClinicAppointmentSystem.Model.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PetClinicAppointmentSystem.Model.Entity.Giris", b =>
                {
                    b.HasOne("PetClinicAppointmentSystem.Model.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PetClinicAppointmentSystem.Model.Entity.Pet", b =>
                {
                    b.HasOne("PetClinicAppointmentSystem.Model.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PetClinicAppointmentSystem.Model.Entity.User", b =>
                {
                    b.HasOne("PetClinicAppointmentSystem.Model.Entity.Yetki", "Yetki")
                        .WithMany()
                        .HasForeignKey("YetkiId");
                });
#pragma warning restore 612, 618
        }
    }
}
